TODO

SECURITY:
 * replace cron by an supervisord event listener listening on TICK_* events (see http://stackoverflow.com/questions/27341846/using-supervisor-as-cron)
 [DONE]* reverse start.sh/supervisord relationship so that supervisord is the init process and start.sh is under its control
 * add wp-cli to the container

 * create an apparmor profile for the project
 * add a wordpress user on the container's host
 * strict file ownership (uploads is only dir writable, all files owned by wordpress user and restricted)
 * obfuscate Wordpress URL structure and headers.
 * verify PGP signature of the downloaded nginx source code

DEPLOYMENT:

 * create a Dockerfile project for a nginx proxy with  fair balancer, streaming, cache purging LE TLS and apparmor profile
 [IN PROGRESS]* include a Docker compose file for instantiating an nginx proxy,  a web server and database server on a new network
 * include Ansible playbooks for deploying above setup to GCE, DO and AWS


ANALYTICS:

 * send all logs to syslog and send them to splunk on the cloud
 * put google analytic agent away from the application (maybe in nginx using ngx_pagespeed)
 * integrate with NewRelics for system monitoring



MISC:

 [DONE]* Docker Hub images automated build that tracks Github tags (v#)


 * make sure it work with IPv6, make appropriate changes
 * make sure it work with Docker overlay networks, make appropriate changes
 * make sure it work behind a proxy server, make appropriate changes (it works behind CloudFlare so far)

 [DONE]* upgrade to PHP7
 * add support for APCu in-memory, in-process key/value userland object caching
 * add GUI to opcode

 * enable /status and /ping for php-fpm

 * look into Kubernetes on GCE

 [DONE]* install ACME client from OS package
 [DONE]* review packages installed in Dockerfile, drop the unecessary ones

 [DONE]* add support for HTTP/2
 * use Docker Slim to shrink the size of the image

 * customise download endpoint for Wordpress package
 * checksum verification of Wordpress package when downloading specific version

 * find an easily configurable way to allow access to xmlrpc.php for staff who can't be tied to one specific IP
